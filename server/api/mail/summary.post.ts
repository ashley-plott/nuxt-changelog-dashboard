// server/api/mail/summary.post.ts
import { defineEventHandler, readBody } from 'h3'
import { getDb } from '../../utils/mongo'
import { requireRole } from '../../utils/session'
import { sendMail } from '../../utils/postmark'   // <- switch to Postmark

function firstOfMonthUTC(y: number, m: number) { return new Date(Date.UTC(y, m, 1)) }
function monthRangeUTC(d = new Date()) {
  const start = firstOfMonthUTC(d.getUTCFullYear(), d.getUTCMonth())
  const end   = firstOfMonthUTC(d.getUTCFullYear(), d.getUTCMonth() + 1)
  return { start, end }
}
function fmt(dISO: string) { return new Date(dISO).toLocaleDateString(undefined, { year:'numeric', month:'short', day:'numeric' }) }

export default defineEventHandler(async (event) => {
  await requireRole(event, ['manager','admin'])

  const body = await readBody(event).catch(() => ({}))
  const to   = body?.to || process.env.MAIL_TO_DEFAULT

  const db = await getDb()
  const { start, end } = monthRangeUTC()

  const items = await db.collection('maintenance')
    .find({ date: { $gte: start.toISOString(), $lt: end.toISOString() } })
    .sort({ date: 1, 'site.name': 1, 'site.id': 1 })
    .toArray()

  const reports = items.filter(i => i.kind === 'report' || i.labels?.reportDue)
  const maint   = items.filter(i => i.kind !== 'report')

  const monthLabel = start.toLocaleString(undefined, { month: 'long', year: 'numeric' })
  const row = (i: any) => `
    <tr>
      <td style="padding:6px 8px;border-bottom:1px solid #eee">${i.site?.name || i.site?.id}</td>
      <td style="padding:6px 8px;border-bottom:1px solid #eee">${i.site?.env}</td>
      <td style="padding:6px 8px;border-bottom:1px solid #eee">${fmt(i.date)}</td>
      <td style="padding:6px 8px;border-bottom:1px solid #eee">
        ${i.kind === 'report' || i.labels?.reportDue ? 'Report' : 'Maintenance'}
        ${i.labels?.preRenewal ? ' • Pre-renewal' : ''}
        ${i.labels?.midYear ? ' • Mid-year' : ''}
      </td>
    </tr>`

  const section = (title: string, arr: any[]) => `
    <h3 style="margin:18px 0 6px;font-family:system-ui,Segoe UI,Arial;font-size:16px">${title} (${arr.length})</h3>
    ${arr.length ? `<table cellspacing="0" cellpadding="0" style="border-collapse:collapse;width:100%;font-family:system-ui,Segoe UI,Arial;font-size:14px">
      <thead>
        <tr>
          <th align="left" style="padding:6px 8px;border-bottom:1px solid #ddd">Site</th>
          <th align="left" style="padding:6px 8px;border-bottom:1px solid #ddd">Env</th>
          <th align="left" style="padding:6px 8px;border-bottom:1px solid #ddd">Date</th>
          <th align="left" style="padding:6px 8px;border-bottom:1px solid #ddd">Type</th>
        </tr>
      </thead>
      <tbody>${arr.map(row).join('')}</tbody>
    </table>` : `<p style="margin:6px 0 0;color:#666">None.</p>`}`

  const html = `
    <div style="max-width:740px;margin:0 auto;padding:16px">
      <h2 style="font-family:system-ui,Segoe UI,Arial;font-size:20px;margin:0 0 10px">Maintenance & Reports — ${monthLabel}</h2>
      ${section('Reports due this month', reports)}
      ${section('Maintenance this month', maint)}
      <p style="margin-top:18px;color:#999;font-size:12px">Generated by Plott Scheduler</p>
    </div>`

  const text = [
    `Maintenance & Reports — ${monthLabel}`, '',
    `Reports (${reports.length}):`,
    ...reports.map((i: any) => `- ${i.site?.name || i.site?.id} [${i.site?.env}] ${fmt(i.date)} Report`),
    '',
    `Maintenance (${maint.length}):`,
    ...maint.map((i: any) => `- ${i.site?.name || i.site?.id} [${i.site?.env}] ${fmt(i.date)} Maint`),
  ].join('\n')

  await sendMail({
    to,
    subject: `Maintenance & Reports — ${monthLabel}`,
    text,
    html,
    tag: 'monthly-summary',
    // messageStream: 'outbound' // optional override
  })

  return { ok: true, sent: true, counts: { reports: reports.length, maintenance: maint.length } }
})
